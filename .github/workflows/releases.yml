name: Dev Incremental Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*.*"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ONRAMPER_API_KEY: ${{ secrets.ONRAMPER_API_KEY }}
  ULTRALIGHT_RESOURCES_DIR: ./ultralight-sdk/resources/
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_RELEASE_LTO: true
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1

jobs:
  compile-and-package:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    name: upload-binaries
    if: github.repository == 'coincubetech/liana'
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: taiki-e/create-gh-release-action@v1
        with:
          title: ${{ github.ref_name }}
          branch: master

      # Install necessary tools
      - uses: milliewalky/setup-7-zip@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-wix

      # For Linux upload binary and libraries in a compressed tarball
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libudev-dev pkg-config

      - name: Download ultralight-sdk
        if: matrix.os == 'ubuntu-latest'
        run: |
          curl -L -O https://github.com/coincubetech/liana/releases/download/v0.0.1/ultralight-sdk-latest-linux-x64.7z
          7z x ultralight-sdk-latest-linux-x64.7z -oultralight-sdk -y
          mv ultralight-sdk/bin lib

      - uses: taiki-e/upload-rust-binary-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          package: liana-gui
          bin: coincube-vault
          archive: coincube-vault-$tag-$target
          target: x86_64-unknown-linux-gnu
          include: LICENCE,README.md,lib
          profile: app-release
          locked: true

      # Generate icons for macOS and Windows
      - name: Generate Icons for Installers
        if: matrix.os != 'ubuntu-latest'
        run: |
          pip install pillow icnsutil
          python ./contrib/release/macos/icns-creator.py

      # For Windows upload an installer
      - name: Download ultralight-sdk
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -O https://github.com/coincubetech/liana/releases/download/v0.0.1/ultralight-sdk-latest-win-x64.7z
          7z x ultralight-sdk-latest-win-x64.7z -oultralight-sdk -y

      - name: Package and release .msi installer for Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install wixtoolset --version=3.14.1 --yes
          cargo wix --package liana-gui --profile app-release --output "target\wix\Coincube Vault.msi" --include ./contrib/release/wix/main.wxs --nocapture -v

      - name: Upload .msi to release
        if: matrix.os == 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "target/wix/Coincube Vault.msi"
          tag: ${{ github.ref }}
          overwrite: true
          body: "Windows x64 Installer"

      # For macOS upload a signed and notarized dmg
      - name: Compile Project for macOS x86 and arm64
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --package liana-gui --profile app-release
          cp target/app-release/coincube-vault Vault

      - name: Download ultralight-sdk
        if: matrix.os == 'macos-latest'
        run: |
          curl -L -O https://github.com/coincubetech/liana/releases/download/v0.0.1/ultralight-sdk-latest-mac-arm64.7z
          7z x ultralight-sdk-latest-mac-arm64.7z -oultralight-sdk -y

      - name: Copy Executable, Icons and Extra Metadata into .app folder
        if: matrix.os == 'macos-latest'
        run: |
          unzip ./contrib/release/macos/Vault.app.zip
          sed -i '' "s/VERSION_PLACEHOLDER/${{ github.ref_name }}/g" ./Vault.app/Contents/Info.plist
          mv Vault ./Vault.app/Contents/MacOS/Vault
          cp -r ultralight-sdk/bin ./Vault.app/Contents/Frameworks
          mv ./contrib/release/macos/Vault.icns ./Vault.app/Contents/Resources/Vault.icns

      - name: Decode and Import macOS signing certificate
        if: matrix.os == 'macos-latest'
        env:
          P12_BASE64: ${{ secrets.CERTIFICATE_P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.CERTIFICATE_P12_PASSWORD }}
        run: |
          echo "$P12_BASE64" | base64 -d > signing_certificate.p12
          security create-keychain -p github actions.keychain
          security import signing_certificate.p12 -k ~/Library/Keychains/actions.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-keychain-settings ~/Library/Keychains/actions.keychain
          security unlock-keychain -p github ~/Library/Keychains/actions.keychain
          security default-keychain -s ~/Library/Keychains/actions.keychain
          rm signing_certificate.p12

      - name: CodeSign and Notarize .app folder bundle
        if: matrix.os == 'macos-latest'
        run: |
          codesign --remove-signature Vault.app
          codesign --options runtime --deep --force --sign "Developer ID Application: COINCUBE TECHNOLOGY LLC (8UVR249AD5)" --verbose=4 Vault.app
          codesign --verify --deep --strict --verbose=2 Vault.app
          xcrun notarytool submit Vault.app --apple-id "${{ secrets.APPLE_ID }}" --team-id "${{ secrets.APPLE_TEAM_ID }}" --password "${{ secrets.APPLE_APP_PASSWORD }}" --wait
          xcrun stapler staple Vault.app
          spctl --verbose=4 --assess --type execute Vault.app
          7z a Vault.app.zip Vault.app/

      - name: Upload .app.zip file as Release Artefact
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "Vault.app.zip"
          tag: ${{ github.ref }}
          overwrite: true
          body: "macOS App Bundle (arm64)"
